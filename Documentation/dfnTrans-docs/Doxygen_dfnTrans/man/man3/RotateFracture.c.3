.TH "Docs_PT/ParticleTracking_source/RotateFracture.c" 3 "Mon Jun 24 2019" "dfnTrans" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Docs_PT/ParticleTracking_source/RotateFracture.c
.SH SYNOPSIS
.br
.PP
\fC#include <stdio\&.h>\fP
.br
\fC#include <search\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include <math\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include 'FuncDef\&.h'\fP
.br
\fC#include <unistd\&.h>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBposit3d\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBConvertto2d\fP ()"
.br
.ti -1c
.RI "void \fBConvertto3d\fP ()"
.br
.ti -1c
.RI "void \fBChangeFracture\fP (int cell_win)"
.br
.ti -1c
.RI "struct \fBposit3d\fP \fBCalculatePosition3D\fP ()"
.br
.ti -1c
.RI "void \fBVelocity3D\fP ()"
.br
.ti -1c
.RI "struct \fBposit3d\fP \fBCalculateVelocity3D\fP ()"
.br
.ti -1c
.RI "void \fBCoordinations2D\fP ()"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "struct \fBposit3d\fP CalculatePosition3D ()"
Function calculates 3D coordinates of current particle's position at 2D fracture plane 
.PP
Definition at line 213 of file RotateFracture\&.c\&.
.SS "struct \fBposit3d\fP CalculateVelocity3D ()"
The function converts particle's 2D velocity vector to 3D velocity vector 
.PP
Definition at line 335 of file RotateFracture\&.c\&.
.SS "void ChangeFracture (int cell_win)"
This function recalculates particles coordinations at intersection lines\&. Particles XY coordinations at one fracture are recalculated to 3D positions and then new XY coordinations of an intersecting fracture are defined\&. 
.PP
Definition at line 183 of file RotateFracture\&.c\&.
.SS "void Convertto2d ()"
The function uses rotation matrix and fracture's normal vector to rotate fracture from its position in 3D to XY plane if node belongs to intersection, belongs to two fractures 
.PP
Definition at line 17 of file RotateFracture\&.c\&.
.SS "void Convertto3d ()"
The function uses rotation matrix to rotate fracture from its position in XY plane to 3D domain 
.PP
Definition at line 130 of file RotateFracture\&.c\&.
.SS "void Coordinations2D ()"
The function outputs 2D coordinations of nodes: every fracture into separate file\&. Those files are used as input to gstat for length correlation of aperture\&. 
.PP
Definition at line 360 of file RotateFracture\&.c\&.
.SS "void Velocity3D ()"
Recalculates 2D velocities at XY fracture plane to 3D velocties in the simulation domain\&. This procedure is not used for particle tracking, but can be used for velocity field visualization\&. 
.PP
Definition at line 246 of file RotateFracture\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for dfnTrans from the source code\&.
