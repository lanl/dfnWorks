var searchData=
[
  ['randomtranslation',['randomTranslation',['../generating_points_8cpp.html#a152eb5ef32d8e1dd69785a1e05d9c8c0',1,'randomTranslation(std::mt19937_64 &amp;generator, float xMin, float xMax, float yMin, float yMax, float zMin, float zMax):&#160;generatingPoints.cpp'],['../generating_points_8h.html#a152eb5ef32d8e1dd69785a1e05d9c8c0',1,'randomTranslation(std::mt19937_64 &amp;generator, float xMin, float xMax, float yMin, float yMax, float zMin, float zMax):&#160;generatingPoints.cpp']]],
  ['rejectionreasons',['RejectionReasons',['../struct_rejection_reasons.html#a7c3b2ce9ef471fd419b3dd372b348efb',1,'RejectionReasons']]],
  ['removefractures',['removeFractures',['../remove_fractures_8cpp.html#a016a4a3e0104523549279e6f6cf6c6d8',1,'removeFractures(double minSize, std::vector&lt; Poly &gt; &amp;acceptedPolys, std::vector&lt; IntPoints &gt; &amp;intPts, std::vector&lt; Point &gt; triplePoints, Stats &amp;pstats):&#160;removeFractures.cpp'],['../remove_fractures_8h.html#a016a4a3e0104523549279e6f6cf6c6d8',1,'removeFractures(double minSize, std::vector&lt; Poly &gt; &amp;acceptedPolys, std::vector&lt; IntPoints &gt; &amp;intPts, std::vector&lt; Point &gt; triplePoints, Stats &amp;pstats):&#160;removeFractures.cpp']]],
  ['reset_5fterminal_5fmode',['reset_terminal_mode',['../hotkey_8cpp.html#ac8373d63f264c2e956b071b5bd2588a1',1,'reset_terminal_mode():&#160;hotkey.cpp'],['../hotkey_8h.html#ac8373d63f264c2e956b071b5bd2588a1',1,'reset_terminal_mode():&#160;hotkey.cpp']]],
  ['retranslatepoly',['reTranslatePoly',['../insert_shape_8cpp.html#afa95ede56e6ecb8918b61c5a2815d40d',1,'reTranslatePoly(struct Poly &amp;newPoly, struct Shape &amp;shapeFam, std::mt19937_64 &amp;generator):&#160;insertShape.cpp'],['../insert_shape_8h.html#afa95ede56e6ecb8918b61c5a2815d40d',1,'reTranslatePoly(struct Poly &amp;newPoly, struct Shape &amp;shapeFam, std::mt19937_64 &amp;generator):&#160;insertShape.cpp']]],
  ['rotatefractures',['rotateFractures',['../output_8cpp.html#a05f2f6fb056bf06f18530445383e53d1',1,'rotateFractures(std::vector&lt; unsigned int &gt; &amp;finalFractures, std::vector&lt; Poly &gt; &amp;acceptedPoly):&#160;output.cpp'],['../output_8h.html#a05f2f6fb056bf06f18530445383e53d1',1,'rotateFractures(std::vector&lt; unsigned int &gt; &amp;finalFractures, std::vector&lt; Poly &gt; &amp;acceptedPoly):&#160;output.cpp']]],
  ['rotationmatrix',['rotationMatrix',['../computational_geometry_8cpp.html#a8aaea6ef9d977f6d7d571d45ace1ad5d',1,'rotationMatrix(double *normalA, double *normalB):&#160;computationalGeometry.cpp'],['../computational_geometry_8h.html#a8aaea6ef9d977f6d7d571d45ace1ad5d',1,'rotationMatrix(double *normalA, double *normalB):&#160;computationalGeometry.cpp']]]
];
